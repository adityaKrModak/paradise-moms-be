# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Review {
  id: Int!
  product: Product!
  user: User!
  rating: Int!
  comment: String
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ProductImage {
  url: String!
  rank: Int!
}

type Category {
  id: Int!
  name: String!
  description: String
  products: [Product]
}

type Product {
  id: Int!
  name: String!
  description: String!
  currency: String!
  price: Int!
  stock: Int!
  reviews: [Review!]
  imageUrls: [ProductImage!]!
  metadata: JSON
  orderItems: [OrderItem!]
  categories: [Category]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type OrderItem {
  id: Int!
  order: Order!
  product: Product!
  quantity: Int!
  currency: String!
  price: Int!
}

type Order {
  id: Int!
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime!
  status: OrderStatus!
  totalPrice: Int!
  currency: String!
  orderItems: [OrderItem!]
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

type AuthAccount {
  id: Int!
  oauthProvider: String!
  oauthId: String!
  user: User!
}

type Address {
  id: Int!
  fullName: String!
  street: String!
  city: String!
  state: String!
  zip: String!
  country: String!
  phoneNumber: String
  addressType: AddressType!
  user: User!
}

enum AddressType {
  PRIMARY
  SECONDARY
}

type User {
  id: Int!
  email: String!
  firstName: String!
  lastName: String
  phoneNumber: String

  """User role for authorization"""
  role: UserRole!
  orders: [Order!]
  reviews: [Review!]
  addresses: [Address!]
  authAccounts: [AuthAccount!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""User role types"""
enum UserRole {
  ADMIN
  USER
}

type Refund {
  id: String!
  payment: Payment!
  gateway: PaymentGateway!
  gatewayRefundId: String!
  amount: Int!
  currency: String!
  status: String!
  metadata: JSON
  createdAt: DateTime!
  updatedAt: DateTime!
}

type PaymentGateway {
  id: Int!
  name: String!
  isActive: Boolean!
  config: JSON!
  createdAt: DateTime!
  updatedAt: DateTime!
  paymentIntents: [PaymentIntent!]
  payments: [Payment!]
  refunds: [Refund!]
}

type PaymentIntent {
  id: String!
  order: Order!
  orderId: Int!
  amount: Int!
  currency: String!
  status: String!
  userEmail: String!
  gateway: PaymentGateway!
  gatewayId: Int!
  gatewayIntentId: String!
  metadata: JSON
  createdAt: DateTime!
  updatedAt: DateTime!
  payments: [Payment!]
}

type Payment {
  id: String!
  intent: PaymentIntent!
  intentId: String!
  gateway: PaymentGateway!
  gatewayId: Int!
  gatewayPaymentId: String!
  gatewaySignature: String
  userEmail: String!
  status: String!
  amount: Int!
  currency: String!
  amountRefunded: Int!
  metadata: JSON
  createdAt: DateTime!
  updatedAt: DateTime!
  refunds: [Refund!]
}

type Query {
  me: User!
  users: [User!]!
  orders: [Order!]!
  myOrders: [Order!]!
  order(id: Int!): Order!
  products: [Product!]!
  product(id: Int!): Product!
  reviews: [Review!]!
  review(id: Int!): Review!
  paymentGateways: [PaymentGateway!]!
  activePaymentGateways: [PaymentGateway!]!
  paymentGateway(id: Int!): PaymentGateway!
  paymentIntents: [PaymentIntent!]!
  paymentIntent(id: String!): PaymentIntent!
  paymentIntentByOrder(orderId: Int!): PaymentIntent!
  categories: [Category!]!
  category(id: Int!): Category!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUserInput(updateUserInput: UpdateUserInput!): User!
  updateUserByAdmin(updateUserInput: UpdateUserInput!): User!
  addAddress(createAddressInput: CreateAddressInput!): Address!
  updateAddress(updateAddressInput: UpdateAddressInput!): Address!
  removeAddress(addressId: Float!): Boolean!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  updateOrder(updateOrderInput: UpdateOrderInput!): Order!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: Int!): Product!
  createReview(createReviewInput: CreateReviewInput!): Review!
  updateReview(updateReviewInput: UpdateReviewInput!): Review!
  removeReview(id: Int!): Review!
  verifyRazorpayPayment(razorpayOrderId: String!, razorpayPaymentId: String!, razorpaySignature: String!): Payment!
  createPaymentGateway(input: CreatePaymentGatewayInput!): PaymentGateway!
  updatePaymentGateway(input: UpdatePaymentGatewayInput!): PaymentGateway!
  removePaymentGateway(id: Int!): PaymentGateway!
  createPaymentIntent(createPaymentIntentInput: CreatePaymentIntentInput!): PaymentIntent!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: Int!): Category!
}

input CreateUserInput {
  email: String!
  firstName: String!
  lastName: String!
  phoneNumber: String
}

input UpdateUserInput {
  id: Float!
  firstName: String
  lastName: String
  email: String
  role: UserRole
  phoneNumber: String
}

input CreateAddressInput {
  fullName: String
  street: String!
  city: String!
  state: String!
  zip: String!
  country: String!
  phoneNumber: String
  addressType: AddressType! = SECONDARY
}

input UpdateAddressInput {
  fullName: String
  street: String
  city: String
  state: String
  zip: String
  country: String
  phoneNumber: String
  addressType: AddressType = SECONDARY
  id: Int!
}

input CreateOrderInput {
  orderItems: [CreateOrderItemInput!]!
  currency: String!
  addressId: Int!
}

input CreateOrderItemInput {
  productId: Int!
  quantity: Int!
}

input UpdateOrderInput {
  id: Int!
  status: OrderStatus!
}

input CreateProductInput {
  name: String!
  description: String!
  currency: String!
  price: Int!
  stock: Int!
  imageUrls: [ProductImageInput!]!
  metadata: JSON
  categoryIds: [Int!]!
}

input ProductImageInput {
  url: String!
  rank: Int!
}

input UpdateProductInput {
  name: String
  description: String
  currency: String
  price: Int
  stock: Int
  imageUrls: [ProductImageInput!]
  metadata: JSON
  categoryIds: [Int!]
  id: Int!
}

input CreateReviewInput {
  productId: Int!
  rating: Int!
  comment: String
  userId: Int
}

input UpdateReviewInput {
  productId: Int
  rating: Int
  comment: String
  userId: Int
  id: Int!
}

input CreatePaymentGatewayInput {
  name: String!
  isActive: Boolean
  config: JSON!
}

input UpdatePaymentGatewayInput {
  name: String
  isActive: Boolean
  config: JSON
  id: Int!
}

input CreatePaymentIntentInput {
  orderId: Int!
  amount: Int!
  currency: String!
  gatewayId: Int!
  email: String!
  metadata: JSON
}

input CreateCategoryInput {
  name: String!
  description: String
}

input UpdateCategoryInput {
  name: String
  description: String
  id: Int!
}
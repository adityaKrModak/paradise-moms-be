datasource db {
  provider = "postgresql" // Or your database of choice, e.g., "mysql", "sqlite", "sqlserver"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {                                            
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String      
  profile  Profile?
  orders   Order[]
  Review   Review[]
  authAccounts AuthAccount[]
}
model AuthAccount {
  id           Int      @id @default(autoincrement())
  oauthProvider String
  oauthId       String
  userId        Int
  user          User    @relation(fields: [userId], references: [id])

  @@unique([oauthProvider, oauthId])
}
model Profile {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  userId    Int    @unique
  user      User   @relation(fields: [userId], references: [id])
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  products    Product[]
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  categories  Category[]
  reviews     Review[]
  imageUrls   Json
  OrderItem   OrderItem[]
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  user       User        @relation(fields: [userId], references: [id])
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  status     String
  orderItems OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Int     
}

model Review {
  id        Int      @id @default(autoincrement())
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
}
